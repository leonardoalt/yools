(declare-fun _address_2048_0 () (_ BitVec 256))
(declare-fun _basefee_2049_0 () (_ BitVec 256))
(declare-fun _calldatasize_2050_0 () (_ BitVec 256))
(declare-fun _caller_2051_0 () (_ BitVec 256))
(declare-fun _callvalue_2052_0 () (_ BitVec 256))
(declare-fun _chainid_2053_0 () (_ BitVec 256))
(declare-fun _codesize_2054_0 () (_ BitVec 256))
(declare-fun _coinbase_2055_0 () (_ BitVec 256))
(declare-fun _difficulty_2056_0 () (_ BitVec 256))
(declare-fun _gaslimit_2057_0 () (_ BitVec 256))
(declare-fun _gasprice_2058_0 () (_ BitVec 256))
(declare-fun _number_2059_0 () (_ BitVec 256))
(declare-fun _origin_2060_0 () (_ BitVec 256))
(declare-fun _timestamp_2061_0 () (_ BitVec 256))
(define-fun _memory_2062_0 () (Array (_ BitVec 256) (_ BitVec 8)) ((as const (Array (_ BitVec 256) (_ BitVec 8))) #x00))
(declare-fun _storage_2063_0 () (Array (_ BitVec 256) (_ BitVec 256)))
(declare-fun _calldata_2064_0 ((_ BitVec 256)) (_ BitVec 8))
(declare-fun _keccak256_32_2065_0 ((_ BitVec 256)) (_ BitVec 256))
(declare-fun _keccak256_64_2066_0 ((_ BitVec 256) (_ BitVec 256)) (_ BitVec 256))
(declare-fun _keccak256_2067_0 ((Array (_ BitVec 256) (_ BitVec 8)) (_ BitVec 256) (_ BitVec 256)) (_ BitVec 256))
(define-fun _revert_flag_2068_0 () (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000000)
(define-fun _stop_flag_2069_0 () (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000000)
(assert (= ((_ extract 255 160) _address_2048_0) #x000000000000000000000000))
(define-const _1 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000000)
(define-const _2 (_ BitVec 256) (concat (_calldata_2064_0 (bvadd _1 #x0000000000000000000000000000000000000000000000000000000000000000)) (_calldata_2064_0 (bvadd _1 #x0000000000000000000000000000000000000000000000000000000000000001)) (_calldata_2064_0 (bvadd _1 #x0000000000000000000000000000000000000000000000000000000000000002)) (_calldata_2064_0 (bvadd _1 #x0000000000000000000000000000000000000000000000000000000000000003)) (_calldata_2064_0 (bvadd _1 #x0000000000000000000000000000000000000000000000000000000000000004)) (_calldata_2064_0 (bvadd _1 #x0000000000000000000000000000000000000000000000000000000000000005)) (_calldata_2064_0 (bvadd _1 #x0000000000000000000000000000000000000000000000000000000000000006)) (_calldata_2064_0 (bvadd _1 #x0000000000000000000000000000000000000000000000000000000000000007)) (_calldata_2064_0 (bvadd _1 #x0000000000000000000000000000000000000000000000000000000000000008)) (_calldata_2064_0 (bvadd _1 #x0000000000000000000000000000000000000000000000000000000000000009)) (_calldata_2064_0 (bvadd _1 #x000000000000000000000000000000000000000000000000000000000000000a)) (_calldata_2064_0 (bvadd _1 #x000000000000000000000000000000000000000000000000000000000000000b)) (_calldata_2064_0 (bvadd _1 #x000000000000000000000000000000000000000000000000000000000000000c)) (_calldata_2064_0 (bvadd _1 #x000000000000000000000000000000000000000000000000000000000000000d)) (_calldata_2064_0 (bvadd _1 #x000000000000000000000000000000000000000000000000000000000000000e)) (_calldata_2064_0 (bvadd _1 #x000000000000000000000000000000000000000000000000000000000000000f)) (_calldata_2064_0 (bvadd _1 #x0000000000000000000000000000000000000000000000000000000000000010)) (_calldata_2064_0 (bvadd _1 #x0000000000000000000000000000000000000000000000000000000000000011)) (_calldata_2064_0 (bvadd _1 #x0000000000000000000000000000000000000000000000000000000000000012)) (_calldata_2064_0 (bvadd _1 #x0000000000000000000000000000000000000000000000000000000000000013)) (_calldata_2064_0 (bvadd _1 #x0000000000000000000000000000000000000000000000000000000000000014)) (_calldata_2064_0 (bvadd _1 #x0000000000000000000000000000000000000000000000000000000000000015)) (_calldata_2064_0 (bvadd _1 #x0000000000000000000000000000000000000000000000000000000000000016)) (_calldata_2064_0 (bvadd _1 #x0000000000000000000000000000000000000000000000000000000000000017)) (_calldata_2064_0 (bvadd _1 #x0000000000000000000000000000000000000000000000000000000000000018)) (_calldata_2064_0 (bvadd _1 #x0000000000000000000000000000000000000000000000000000000000000019)) (_calldata_2064_0 (bvadd _1 #x000000000000000000000000000000000000000000000000000000000000001a)) (_calldata_2064_0 (bvadd _1 #x000000000000000000000000000000000000000000000000000000000000001b)) (_calldata_2064_0 (bvadd _1 #x000000000000000000000000000000000000000000000000000000000000001c)) (_calldata_2064_0 (bvadd _1 #x000000000000000000000000000000000000000000000000000000000000001d)) (_calldata_2064_0 (bvadd _1 #x000000000000000000000000000000000000000000000000000000000000001e)) (_calldata_2064_0 (bvadd _1 #x000000000000000000000000000000000000000000000000000000000000001f))))
(define-const x_2_1 (_ BitVec 256) _2)
(define-const _3 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000020)
(define-const _4 (_ BitVec 256) (concat (_calldata_2064_0 (bvadd _3 #x0000000000000000000000000000000000000000000000000000000000000000)) (_calldata_2064_0 (bvadd _3 #x0000000000000000000000000000000000000000000000000000000000000001)) (_calldata_2064_0 (bvadd _3 #x0000000000000000000000000000000000000000000000000000000000000002)) (_calldata_2064_0 (bvadd _3 #x0000000000000000000000000000000000000000000000000000000000000003)) (_calldata_2064_0 (bvadd _3 #x0000000000000000000000000000000000000000000000000000000000000004)) (_calldata_2064_0 (bvadd _3 #x0000000000000000000000000000000000000000000000000000000000000005)) (_calldata_2064_0 (bvadd _3 #x0000000000000000000000000000000000000000000000000000000000000006)) (_calldata_2064_0 (bvadd _3 #x0000000000000000000000000000000000000000000000000000000000000007)) (_calldata_2064_0 (bvadd _3 #x0000000000000000000000000000000000000000000000000000000000000008)) (_calldata_2064_0 (bvadd _3 #x0000000000000000000000000000000000000000000000000000000000000009)) (_calldata_2064_0 (bvadd _3 #x000000000000000000000000000000000000000000000000000000000000000a)) (_calldata_2064_0 (bvadd _3 #x000000000000000000000000000000000000000000000000000000000000000b)) (_calldata_2064_0 (bvadd _3 #x000000000000000000000000000000000000000000000000000000000000000c)) (_calldata_2064_0 (bvadd _3 #x000000000000000000000000000000000000000000000000000000000000000d)) (_calldata_2064_0 (bvadd _3 #x000000000000000000000000000000000000000000000000000000000000000e)) (_calldata_2064_0 (bvadd _3 #x000000000000000000000000000000000000000000000000000000000000000f)) (_calldata_2064_0 (bvadd _3 #x0000000000000000000000000000000000000000000000000000000000000010)) (_calldata_2064_0 (bvadd _3 #x0000000000000000000000000000000000000000000000000000000000000011)) (_calldata_2064_0 (bvadd _3 #x0000000000000000000000000000000000000000000000000000000000000012)) (_calldata_2064_0 (bvadd _3 #x0000000000000000000000000000000000000000000000000000000000000013)) (_calldata_2064_0 (bvadd _3 #x0000000000000000000000000000000000000000000000000000000000000014)) (_calldata_2064_0 (bvadd _3 #x0000000000000000000000000000000000000000000000000000000000000015)) (_calldata_2064_0 (bvadd _3 #x0000000000000000000000000000000000000000000000000000000000000016)) (_calldata_2064_0 (bvadd _3 #x0000000000000000000000000000000000000000000000000000000000000017)) (_calldata_2064_0 (bvadd _3 #x0000000000000000000000000000000000000000000000000000000000000018)) (_calldata_2064_0 (bvadd _3 #x0000000000000000000000000000000000000000000000000000000000000019)) (_calldata_2064_0 (bvadd _3 #x000000000000000000000000000000000000000000000000000000000000001a)) (_calldata_2064_0 (bvadd _3 #x000000000000000000000000000000000000000000000000000000000000001b)) (_calldata_2064_0 (bvadd _3 #x000000000000000000000000000000000000000000000000000000000000001c)) (_calldata_2064_0 (bvadd _3 #x000000000000000000000000000000000000000000000000000000000000001d)) (_calldata_2064_0 (bvadd _3 #x000000000000000000000000000000000000000000000000000000000000001e)) (_calldata_2064_0 (bvadd _3 #x000000000000000000000000000000000000000000000000000000000000001f))))
(define-const y_3_1 (_ BitVec 256) _4)
(define-const _5 (_ BitVec 256) (ite (bvult x_2_1 y_3_1) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _6 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000064)
(define-const _7 (_ BitVec 256) (ite (bvult x_2_1 _6) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _8 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000064)
(define-const _9 (_ BitVec 256) (ite (bvult y_3_1 _8) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _10 (_ BitVec 256) (bvand _7 _9))
(define-const _11 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _12 (_ BitVec 256) (bvadd x_2_1 _11))
(define-const a_4_1 (_ BitVec 256) _12)
(define-const _13 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _14 (_ BitVec 256) (bvadd y_3_1 _13))
(define-const b_5_1 (_ BitVec 256) _14)
(define-const _15 (_ BitVec 256) (ite (bvult a_4_1 b_5_1) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(assert (and (and (= _revert_flag_2068_0 #x0000000000000000000000000000000000000000000000000000000000000000) (= _stop_flag_2069_0 #x0000000000000000000000000000000000000000000000000000000000000000)) (and (not (= _5 #x0000000000000000000000000000000000000000000000000000000000000000)) (not (= _10 #x0000000000000000000000000000000000000000000000000000000000000000))) (= _15 #x0000000000000000000000000000000000000000000000000000000000000000)))
(define-const _16 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _17 (_ BitVec 256) (bvadd x_2_1 _16))
(define-const x_2_2 (_ BitVec 256) _17)
(define-const x_2_3 (_ BitVec 256) (ite (= _5 #x0000000000000000000000000000000000000000000000000000000000000000) x_2_1 x_2_2))
(define-const _18 (_ BitVec 256) (ite (bvult x_2_3 y_3_1) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _19 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000064)
(define-const _20 (_ BitVec 256) (ite (bvult x_2_3 _19) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _21 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000064)
(define-const _22 (_ BitVec 256) (ite (bvult y_3_1 _21) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _23 (_ BitVec 256) (bvand _20 _22))
(define-const _24 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _25 (_ BitVec 256) (bvadd x_2_3 _24))
(define-const a_4_3 (_ BitVec 256) _25)
(define-const _26 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _27 (_ BitVec 256) (bvadd y_3_1 _26))
(define-const b_5_3 (_ BitVec 256) _27)
(define-const _28 (_ BitVec 256) (ite (bvult a_4_3 b_5_3) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(assert (and (and (= _revert_flag_2068_0 #x0000000000000000000000000000000000000000000000000000000000000000) (= _stop_flag_2069_0 #x0000000000000000000000000000000000000000000000000000000000000000)) (and (not (= _18 #x0000000000000000000000000000000000000000000000000000000000000000)) (not (= _23 #x0000000000000000000000000000000000000000000000000000000000000000))) (= _28 #x0000000000000000000000000000000000000000000000000000000000000000)))
(define-const _29 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _30 (_ BitVec 256) (bvadd x_2_3 _29))
(define-const x_2_4 (_ BitVec 256) _30)
(define-const x_2_5 (_ BitVec 256) (ite (= _18 #x0000000000000000000000000000000000000000000000000000000000000000) x_2_3 x_2_4))
(define-const _31 (_ BitVec 256) (ite (bvult x_2_5 y_3_1) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _32 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000064)
(define-const _33 (_ BitVec 256) (ite (bvult x_2_5 _32) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _34 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000064)
(define-const _35 (_ BitVec 256) (ite (bvult y_3_1 _34) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _36 (_ BitVec 256) (bvand _33 _35))
(define-const _37 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _38 (_ BitVec 256) (bvadd x_2_5 _37))
(define-const a_4_5 (_ BitVec 256) _38)
(define-const _39 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _40 (_ BitVec 256) (bvadd y_3_1 _39))
(define-const b_5_5 (_ BitVec 256) _40)
(define-const _41 (_ BitVec 256) (ite (bvult a_4_5 b_5_5) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(assert (and (and (= _revert_flag_2068_0 #x0000000000000000000000000000000000000000000000000000000000000000) (= _stop_flag_2069_0 #x0000000000000000000000000000000000000000000000000000000000000000)) (and (not (= _31 #x0000000000000000000000000000000000000000000000000000000000000000)) (not (= _36 #x0000000000000000000000000000000000000000000000000000000000000000))) (= _41 #x0000000000000000000000000000000000000000000000000000000000000000)))
(define-const _42 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _43 (_ BitVec 256) (bvadd x_2_5 _42))
(define-const x_2_6 (_ BitVec 256) _43)
(define-const x_2_7 (_ BitVec 256) (ite (= _31 #x0000000000000000000000000000000000000000000000000000000000000000) x_2_5 x_2_6))
(define-const _44 (_ BitVec 256) (ite (bvult x_2_7 y_3_1) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _45 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000064)
(define-const _46 (_ BitVec 256) (ite (bvult x_2_7 _45) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _47 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000064)
(define-const _48 (_ BitVec 256) (ite (bvult y_3_1 _47) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _49 (_ BitVec 256) (bvand _46 _48))
(define-const _50 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _51 (_ BitVec 256) (bvadd x_2_7 _50))
(define-const a_4_7 (_ BitVec 256) _51)
(define-const _52 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _53 (_ BitVec 256) (bvadd y_3_1 _52))
(define-const b_5_7 (_ BitVec 256) _53)
(define-const _54 (_ BitVec 256) (ite (bvult a_4_7 b_5_7) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(assert (and (and (= _revert_flag_2068_0 #x0000000000000000000000000000000000000000000000000000000000000000) (= _stop_flag_2069_0 #x0000000000000000000000000000000000000000000000000000000000000000)) (and (not (= _44 #x0000000000000000000000000000000000000000000000000000000000000000)) (not (= _49 #x0000000000000000000000000000000000000000000000000000000000000000))) (= _54 #x0000000000000000000000000000000000000000000000000000000000000000)))
(define-const _55 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _56 (_ BitVec 256) (bvadd x_2_7 _55))
(define-const x_2_8 (_ BitVec 256) _56)
(define-const x_2_9 (_ BitVec 256) (ite (= _44 #x0000000000000000000000000000000000000000000000000000000000000000) x_2_7 x_2_8))
(define-const _57 (_ BitVec 256) (ite (bvult x_2_9 y_3_1) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _58 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000064)
(define-const _59 (_ BitVec 256) (ite (bvult x_2_9 _58) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _60 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000064)
(define-const _61 (_ BitVec 256) (ite (bvult y_3_1 _60) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _62 (_ BitVec 256) (bvand _59 _61))
(define-const _63 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _64 (_ BitVec 256) (bvadd x_2_9 _63))
(define-const a_4_9 (_ BitVec 256) _64)
(define-const _65 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _66 (_ BitVec 256) (bvadd y_3_1 _65))
(define-const b_5_9 (_ BitVec 256) _66)
(define-const _67 (_ BitVec 256) (ite (bvult a_4_9 b_5_9) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(assert (and (and (= _revert_flag_2068_0 #x0000000000000000000000000000000000000000000000000000000000000000) (= _stop_flag_2069_0 #x0000000000000000000000000000000000000000000000000000000000000000)) (and (not (= _57 #x0000000000000000000000000000000000000000000000000000000000000000)) (not (= _62 #x0000000000000000000000000000000000000000000000000000000000000000))) (= _67 #x0000000000000000000000000000000000000000000000000000000000000000)))
(define-const _68 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _69 (_ BitVec 256) (bvadd x_2_9 _68))
(define-const x_2_10 (_ BitVec 256) _69)
(define-const x_2_11 (_ BitVec 256) (ite (= _57 #x0000000000000000000000000000000000000000000000000000000000000000) x_2_9 x_2_10))
(define-const _70 (_ BitVec 256) (ite (bvult x_2_11 y_3_1) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _71 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000064)
(define-const _72 (_ BitVec 256) (ite (bvult x_2_11 _71) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _73 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000064)
(define-const _74 (_ BitVec 256) (ite (bvult y_3_1 _73) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _75 (_ BitVec 256) (bvand _72 _74))
(define-const _76 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _77 (_ BitVec 256) (bvadd x_2_11 _76))
(define-const a_4_11 (_ BitVec 256) _77)
(define-const _78 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _79 (_ BitVec 256) (bvadd y_3_1 _78))
(define-const b_5_11 (_ BitVec 256) _79)
(define-const _80 (_ BitVec 256) (ite (bvult a_4_11 b_5_11) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(assert (and (and (= _revert_flag_2068_0 #x0000000000000000000000000000000000000000000000000000000000000000) (= _stop_flag_2069_0 #x0000000000000000000000000000000000000000000000000000000000000000)) (and (not (= _70 #x0000000000000000000000000000000000000000000000000000000000000000)) (not (= _75 #x0000000000000000000000000000000000000000000000000000000000000000))) (= _80 #x0000000000000000000000000000000000000000000000000000000000000000)))
(define-const _81 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _82 (_ BitVec 256) (bvadd x_2_11 _81))
(define-const x_2_12 (_ BitVec 256) _82)
(define-const x_2_13 (_ BitVec 256) (ite (= _70 #x0000000000000000000000000000000000000000000000000000000000000000) x_2_11 x_2_12))
(define-const _83 (_ BitVec 256) (ite (bvult x_2_13 y_3_1) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _84 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000064)
(define-const _85 (_ BitVec 256) (ite (bvult x_2_13 _84) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _86 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000064)
(define-const _87 (_ BitVec 256) (ite (bvult y_3_1 _86) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _88 (_ BitVec 256) (bvand _85 _87))
(define-const _89 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _90 (_ BitVec 256) (bvadd x_2_13 _89))
(define-const a_4_13 (_ BitVec 256) _90)
(define-const _91 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _92 (_ BitVec 256) (bvadd y_3_1 _91))
(define-const b_5_13 (_ BitVec 256) _92)
(define-const _93 (_ BitVec 256) (ite (bvult a_4_13 b_5_13) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(assert (and (and (= _revert_flag_2068_0 #x0000000000000000000000000000000000000000000000000000000000000000) (= _stop_flag_2069_0 #x0000000000000000000000000000000000000000000000000000000000000000)) (and (not (= _83 #x0000000000000000000000000000000000000000000000000000000000000000)) (not (= _88 #x0000000000000000000000000000000000000000000000000000000000000000))) (= _93 #x0000000000000000000000000000000000000000000000000000000000000000)))
(define-const _94 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _95 (_ BitVec 256) (bvadd x_2_13 _94))
(define-const x_2_14 (_ BitVec 256) _95)
(define-const x_2_15 (_ BitVec 256) (ite (= _83 #x0000000000000000000000000000000000000000000000000000000000000000) x_2_13 x_2_14))
(define-const _96 (_ BitVec 256) (ite (bvult x_2_15 y_3_1) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _97 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000064)
(define-const _98 (_ BitVec 256) (ite (bvult x_2_15 _97) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _99 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000064)
(define-const _100 (_ BitVec 256) (ite (bvult y_3_1 _99) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _101 (_ BitVec 256) (bvand _98 _100))
(define-const _102 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _103 (_ BitVec 256) (bvadd x_2_15 _102))
(define-const a_4_15 (_ BitVec 256) _103)
(define-const _104 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _105 (_ BitVec 256) (bvadd y_3_1 _104))
(define-const b_5_15 (_ BitVec 256) _105)
(define-const _106 (_ BitVec 256) (ite (bvult a_4_15 b_5_15) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(assert (and (and (= _revert_flag_2068_0 #x0000000000000000000000000000000000000000000000000000000000000000) (= _stop_flag_2069_0 #x0000000000000000000000000000000000000000000000000000000000000000)) (and (not (= _96 #x0000000000000000000000000000000000000000000000000000000000000000)) (not (= _101 #x0000000000000000000000000000000000000000000000000000000000000000))) (= _106 #x0000000000000000000000000000000000000000000000000000000000000000)))
(define-const _107 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _108 (_ BitVec 256) (bvadd x_2_15 _107))
(define-const x_2_16 (_ BitVec 256) _108)
(define-const x_2_17 (_ BitVec 256) (ite (= _96 #x0000000000000000000000000000000000000000000000000000000000000000) x_2_15 x_2_16))
(define-const _109 (_ BitVec 256) (ite (bvult x_2_17 y_3_1) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _110 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000064)
(define-const _111 (_ BitVec 256) (ite (bvult x_2_17 _110) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _112 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000064)
(define-const _113 (_ BitVec 256) (ite (bvult y_3_1 _112) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _114 (_ BitVec 256) (bvand _111 _113))
(define-const _115 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _116 (_ BitVec 256) (bvadd x_2_17 _115))
(define-const a_4_17 (_ BitVec 256) _116)
(define-const _117 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _118 (_ BitVec 256) (bvadd y_3_1 _117))
(define-const b_5_17 (_ BitVec 256) _118)
(define-const _119 (_ BitVec 256) (ite (bvult a_4_17 b_5_17) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(assert (and (and (= _revert_flag_2068_0 #x0000000000000000000000000000000000000000000000000000000000000000) (= _stop_flag_2069_0 #x0000000000000000000000000000000000000000000000000000000000000000)) (and (not (= _109 #x0000000000000000000000000000000000000000000000000000000000000000)) (not (= _114 #x0000000000000000000000000000000000000000000000000000000000000000))) (= _119 #x0000000000000000000000000000000000000000000000000000000000000000)))
(define-const _120 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _121 (_ BitVec 256) (bvadd x_2_17 _120))
(define-const x_2_18 (_ BitVec 256) _121)
(define-const x_2_19 (_ BitVec 256) (ite (= _109 #x0000000000000000000000000000000000000000000000000000000000000000) x_2_17 x_2_18))
(define-const _122 (_ BitVec 256) (ite (bvult x_2_19 y_3_1) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _123 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000064)
(define-const _124 (_ BitVec 256) (ite (bvult x_2_19 _123) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _125 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000064)
(define-const _126 (_ BitVec 256) (ite (bvult y_3_1 _125) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(define-const _127 (_ BitVec 256) (bvand _124 _126))
(define-const _128 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _129 (_ BitVec 256) (bvadd x_2_19 _128))
(define-const a_4_19 (_ BitVec 256) _129)
(define-const _130 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _131 (_ BitVec 256) (bvadd y_3_1 _130))
(define-const b_5_19 (_ BitVec 256) _131)
(define-const _132 (_ BitVec 256) (ite (bvult a_4_19 b_5_19) #x0000000000000000000000000000000000000000000000000000000000000001 #x0000000000000000000000000000000000000000000000000000000000000000))
(assert (and (and (= _revert_flag_2068_0 #x0000000000000000000000000000000000000000000000000000000000000000) (= _stop_flag_2069_0 #x0000000000000000000000000000000000000000000000000000000000000000)) (and (not (= _122 #x0000000000000000000000000000000000000000000000000000000000000000)) (not (= _127 #x0000000000000000000000000000000000000000000000000000000000000000))) (= _132 #x0000000000000000000000000000000000000000000000000000000000000000)))
(define-const _133 (_ BitVec 256) #x0000000000000000000000000000000000000000000000000000000000000001)
(define-const _134 (_ BitVec 256) (bvadd x_2_19 _133))
(define-const x_2_20 (_ BitVec 256) _134)
(define-const x_2_21 (_ BitVec 256) (ite (= _122 #x0000000000000000000000000000000000000000000000000000000000000000) x_2_19 x_2_20))
(assert (not (= _revert_flag_2068_0 #x0000000000000000000000000000000000000000000000000000000000000000)))